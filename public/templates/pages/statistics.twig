<!DOCTYPE html>
<html lang="{{ idioma_actual }}" data-bs-theme="dark">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{ title }}</title>
    
    <!-- Bootstrap 5 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Estilos personalizados mínimos -->
    <link rel="stylesheet" href="/assets/styles/generic.css">
    
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    
    <!-- Chart.js -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    
    <!-- Estilos inline mínimos -->
    <style>
        .stats-card {
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }
        
        .stats-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0,0,0,0.2);
        }
        
        .chart-container {
            position: relative;
            height: 250px;
            width: 100%;
        }
        
        .stats-hero {
            background: linear-gradient(rgba(0,0,0,0.7), rgba(0,0,0,0.7)), 
                        url('/assets/images/fungi-background.jpg');
            background-size: cover;
            background-position: center;
            background-attachment: fixed;
        }
        
        /* Leyendas para los gráficos */
        .chart-legend {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
            gap: 1rem;
            margin-top: 1rem;
        }
        
        .legend-item {
            display: flex;
            align-items: center;
            margin-bottom: 0.5rem;
        }
        
        .legend-color {
            display: inline-block;
            width: 20px;
            height: 20px;
            margin-right: 8px;
            border-radius: 3px;
        }
        
        /* Indicadores de tendencia */
        .trend-up {
            color: #28a745;
        }
        
        .trend-down {
            color: #dc3545;
        }
    </style>
</head>
<body>
    <!-- Incluir el encabezado -->
    {% include 'components/navbar.twig' %}
    
    <!-- Hero section -->
    <section class="stats-hero text-center text-white py-5 mb-5">
        <div class="container">
            <h1 class="display-4 fw-bold">Estadísticas</h1>
            <p class="lead">Explorando los datos de nuestra comunidad micológica</p>
        </div>
    </section>
    
    <!-- Sección de métricas principales -->
    <section class="container mb-5">
        <div class="row g-4">
            <!-- Total de hongos registrados -->
            <div class="col-md-6">
                <div class="card stats-card h-100 bg-dark bg-opacity-50 border-0">
                    <div class="card-body text-center">
                        <i class="fas fa-seedling fa-3x mb-3 text-warning"></i>
                        <h2 class="card-title fs-2">{{ stats.total_fungi }}</h2>
                        <p class="card-text text-muted">Especies de hongos registradas</p>
                    </div>
                </div>
            </div>
            
            <!-- Total de usuarios -->
            <div class="col-md-6">
                <div class="card stats-card h-100 bg-dark bg-opacity-50 border-0">
                    <div class="card-body text-center">
                        <i class="fas fa-users fa-3x mb-3 text-info"></i>
                        <h2 class="card-title fs-2">{{ stats.total_users }}</h2>
                        <p class="card-text text-muted">Usuarios registrados</p>
                    </div>
                </div>
            </div>
        </div>
    </section>
    
    <!-- Sección de gráficos -->
    <section class="container mb-5">
        <div class="row">
            <!-- Gráfico de comestibilidad -->
            <div class="col-lg-6 mb-4">
                <div class="card bg-dark text-white shadow">
                    <div class="card-header py-3">
                        <h6 class="m-0 font-weight-bold text-primary">Distribución por comestibilidad</h6>
                    </div>
                    <div class="card-body" style="height: 320px;">
                        <canvas id="edibilityChart"></canvas>
                    </div>
                </div>
            </div>
            
            <!-- Gráfico de familias principales -->
            <div class="col-lg-6 mb-4">
                <div class="card bg-dark text-white shadow">
                    <div class="card-header py-3">
                        <h6 class="m-0 font-weight-bold text-primary">Familias principales</h6>
                    </div>
                    <div class="card-body" style="height: 320px;">
                        <canvas id="familyChart"></canvas>
                        <!-- Debug info para desarrollo -->
                        {% if app.debug is defined and app.debug %}
                        <div class="mt-3 small">
                            <p>Debug - Datos disponibles: {{ debug_families ? 'Sí' : 'No' }}</p>
                            <p>Familias: {{ stats.families|json_encode }}</p>
                        </div>
                        {% endif %}
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Incluir el pie de página -->
    {% include 'components/footer.twig' %}
    
    <!-- Bootstrap JS y Popper.js -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    
    <!-- Gráficos con Chart.js -->
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Configurar los colores para comestibilidad
            const edibilityColors = {
                'excelente-comestible': '#28a745',
                'excelente-comestible-precaucion': '#5cb85c',
                'buen-comestible': '#8bc34a',
                'comestible': '#a5d6a7',
                'comestible-precaucion': '#ffeb3b',
                'sin-valor': '#adb5bd',
                'no-comestible': '#6c757d',
                'toxica': '#ffc107',
                'mortal': '#dc3545'
            };
            
            // Traducción de los valores de comestibilidad para mostrar
            const edibilityLabels = {
                'excelente-comestible': 'Excelente comestible',
                'excelente-comestible-precaucion': 'Excelente (con precaución)',
                'buen-comestible': 'Buen comestible',
                'comestible': 'Comestible',
                'comestible-precaucion': 'Comestible (con precaución)',
                'sin-valor': 'Sin valor culinario',
                'no-comestible': 'No comestible',
                'toxica': 'Tóxica',
                'mortal': 'Mortal'
            };
            
            // Datos del backend - Añadimos verificación para prevenir errores
            const edibilityData = {{ stats.edibility|json_encode|raw }} || [];
            const familyData = {{ stats.families|json_encode|raw }} || [];
            const likesData = {{ stats.popular|json_encode|raw }} || [];
            const favoritesData = {{ stats.favorites|json_encode|raw }} || [];
            
            console.log("Datos de familias:", familyData); // Debugging
            
            // Gráfico de comestibilidad
            const edibilityCtx = document.getElementById('edibilityChart').getContext('2d');
            new Chart(edibilityCtx, {
                type: 'pie',
                data: {
                    labels: edibilityData.map(item => edibilityLabels[item.edibility] || item.edibility),
                    datasets: [{
                        data: edibilityData.map(item => item.count),
                        backgroundColor: edibilityData.map(item => edibilityColors[item.edibility] || '#6c757d'),
                        borderWidth: 2,
                        borderColor: '#343a40'
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'bottom',
                            labels: {
                                color: '#fff'
                            }
                        }
                    }
                }
            });
            
            // Gráfico de familias - Versión mejorada con verificación de datos
            if (familyData && familyData.length > 0) {
                const familyCtx = document.getElementById('familyChart').getContext('2d');
                
                // Colores vibrantes para las familias
                const familyColors = [
                    '#4e73df', '#1cc88a', '#36b9cc', '#f6c23e', '#e74a3b',
                    '#fd7e14', '#6f42c1', '#20c997', '#17a2b8', '#6610f2',
                    '#6f42c1', '#20c997', '#17a2b8', '#6610f2', '#3498db'
                ];
                
                new Chart(familyCtx, {
                    type: 'doughnut',
                    data: {
                        labels: familyData.map(item => item.name || 'Desconocida'),
                        datasets: [{
                            data: familyData.map(item => item.count),
                            backgroundColor: familyColors.slice(0, familyData.length),
                            borderWidth: 2,
                            borderColor: '#343a40'
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                position: 'bottom',
                                labels: {
                                    color: '#fff',
                                    font: {
                                        size: 11
                                    },
                                    boxWidth: 15
                                }
                            },
                            tooltip: {
                                callbacks: {
                                    label: function(context) {
                                        const label = context.label || '';
                                        const value = context.parsed || 0;
                                        const total = context.dataset.data.reduce((a, b) => a + b, 0);
                                        const percentage = Math.round((value / total) * 100);
                                        return `${label}: ${value} (${percentage}%)`;
                                    }
                                }
                            }
                        }
                    }
                });
            } else {
                console.error("No hay datos de familias disponibles");
                document.getElementById('familyChart').innerHTML = '<div class="text-center p-3">No hay datos disponibles</div>';
            }
            
            // Gráfico de likes
            const likesCtx = document.getElementById('likesChart').getContext('2d');
            new Chart(likesCtx, {
                type: 'bar',
                data: {
                    labels: likesData.map(item => item.name),
                    datasets: [{
                        label: 'Likes',
                        data: likesData.map(item => item.likes_count),
                        backgroundColor: '#4e73df',
                        borderColor: '#4e73df',
                        tension: 0.4
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                color: '#fff'
                            },
                            grid: {
                                color: 'rgba(255, 255, 255, 0.1)'
                            }
                        },
                        x: {
                            ticks: {
                                color: '#fff'
                            },
                            grid: {
                                color: 'rgba(255, 255, 255, 0.1)'
                            }
                        }
                    },
                    plugins: {
                        legend: {
                            labels: {
                                color: '#fff'
                            }
                        }
                    }
                }
            });
            
            // Gráfico de favoritos
            const favoritesCtx = document.getElementById('favoritesChart').getContext('2d');
            new Chart(favoritesCtx, {
                type: 'bar',
                data: {
                    labels: favoritesData.map(item => item.name),
                    datasets: [{
                        label: 'Favoritos',
                        data: favoritesData.map(item => item.favorites_count),
                        backgroundColor: '#f6c23e',
                        borderColor: '#f6c23e',
                        tension: 0.4
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                color: '#fff'
                            },
                            grid: {
                                color: 'rgba(255, 255, 255, 0.1)'
                            }
                        },
                        x: {
                            ticks: {
                                color: '#fff'
                            },
                            grid: {
                                color: 'rgba(255, 255, 255, 0.1)'
                            }
                        }
                    },
                    plugins: {
                        legend: {
                            labels: {
                                color: '#fff'
                            }
                        }
                    }
                }
            });
        });
    </script>
</body>
</html>