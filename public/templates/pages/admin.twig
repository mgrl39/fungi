<!DOCTYPE html>
<html lang="{{ idioma_actual }}" data-bs-theme="dark">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{ title }}</title>
    
    <!-- Bootstrap 5 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    
    <!-- Estilos personalizados mínimos -->
    <link rel="stylesheet" href="/assets/styles/generic.css">
    
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    
    <!-- Estilos inline -->
    <style>
        .admin-sidebar {
            min-height: calc(100vh - 56px);
            background-color: rgba(33, 37, 41, 0.8);
            padding-top: 20px;
        }
        .admin-sidebar .nav-link {
            color: rgba(255, 255, 255, 0.75);
            border-radius: 0;
            transition: all 0.3s ease;
        }
        .admin-sidebar .nav-link:hover {
            color: rgba(255, 255, 255, 1);
            transform: translateX(5px);
        }
        .admin-sidebar .nav-link.active {
            color: white;
            background-color: rgba(255, 255, 255, 0.1);
            border-left: 4px solid #0d6efd;
        }
        .admin-main {
            padding: 20px;
        }
        .stats-card {
            background-color: rgba(255, 255, 255, 0.05);
            border-radius: 10px;
            padding: 15px;
            margin-bottom: 20px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.15);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            border: 1px solid rgba(255, 255, 255, 0.1);
        }
        .stats-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
        }
        .card {
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            border: 1px solid rgba(255, 255, 255, 0.1);
            background-color: rgba(255, 255, 255, 0.05);
        }
        .card:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 15px rgba(0, 0, 0, 0.2);
        }
        .card-header {
            background-color: rgba(255, 255, 255, 0.1);
        }
        .table {
            border-color: rgba(255, 255, 255, 0.1);
        }
    </style>
</head>
<body>
    <header>
        {% include 'components/navbar.twig' %}
    </header>

    <div class="container-fluid">
        <div class="row">
            <!-- Contenido principal -->
            <main class="col-md-12 ms-sm-auto px-md-4">
                <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
                    <h1 class="h2">{{ _('Panel de administración') }}</h1>
                </div>

                <!-- Pestañas de navegación -->
                <ul class="nav nav-tabs mb-4" id="adminTabs" role="tablist">
                    <li class="nav-item" role="presentation">
                        <button class="nav-link active" id="stats-tab" data-bs-toggle="tab" data-bs-target="#stats" type="button" role="tab" aria-controls="stats" aria-selected="true">
                            <i class="fas fa-chart-bar me-1"></i> {{ _('Estadísticas') }}
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="fungi-tab" data-bs-toggle="tab" data-bs-target="#fungi" type="button" role="tab" aria-controls="fungi" aria-selected="false">
                            <i class="fas fa-mushroom me-1"></i> {{ _('Hongos') }}
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="users-tab" data-bs-toggle="tab" data-bs-target="#users" type="button" role="tab" aria-controls="users" aria-selected="false">
                            <i class="fas fa-users me-1"></i> {{ _('Usuarios') }}
                        </button>
                    </li>
                </ul>

                <!-- Contenido de las pestañas -->
                <div class="tab-content" id="adminTabContent">
                    <!-- Pestaña de Estadísticas -->
                    <div class="tab-pane fade show active" id="stats" role="tabpanel" aria-labelledby="stats-tab">
                        <!-- Tarjetas de estadísticas -->
                        <div class="row mb-4">
                            {% set stat_cards = [
                                {title: 'Total de hongos', value: stats.total_fungi, color: 'primary'},
                                {title: 'Total de usuarios', value: stats.total_users, color: 'success'}
                            ] %}

                            {% for card in stat_cards %}
                                <div class="col-md-6">
                                    <div class="card mb-4">
                                        <div class="card-body text-center">
                                            <h5 class="card-title">{{ _(card.title) }}</h5>
                                            <h2 class="text-{{ card.color }}">{{ card.value }}</h2>
                                        </div>
                                    </div>
                                </div>
                            {% endfor %}
                        </div>
                    </div>
                    
                    <!-- Pestaña de Hongos -->
                    <div class="tab-pane fade" id="fungi" role="tabpanel" aria-labelledby="fungi-tab">
                        <div class="d-flex justify-content-between mb-3">
                            <h3>{{ _('Gestión de Hongos') }}</h3>
                            <button class="btn btn-primary" id="btnAddFungi">
                                <i class="fas fa-plus"></i> {{ _('Nuevo hongo') }}
                            </button>
                        </div>
                        
                        <div class="table-responsive">
                            <table class="table table-striped" id="fungiTable">
                                <thead>
                                    <tr>
                                        <th>ID</th>
                                        <th>{{ _('Nombre') }}</th>
                                        <th>{{ _('Comestibilidad') }}</th>
                                        <th>{{ _('Acciones') }}</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    {% for fungi in fungi_list %}
                                    <tr>
                                        <td>{{ fungi.id }}</td>
                                        <td>{{ fungi.name }}</td>
                                        <td>{{ fungi.edibility }}</td>
                                        <td>
                                            <button class="btn btn-sm btn-info edit-fungi" data-id="{{ fungi.id }}">
                                                <i class="fas fa-edit"></i>
                                            </button>
                                            <button class="btn btn-sm btn-danger delete-fungi" data-id="{{ fungi.id }}">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </td>
                                    </tr>
                                    {% endfor %}
                                </tbody>
                            </table>
                        </div>
                    </div>

                    <!-- Pestaña de Usuarios -->
                    <div class="tab-pane fade" id="users" role="tabpanel" aria-labelledby="users-tab">
                        <h3 class="mb-3">{{ _('Gestión de Usuarios') }}</h3>
                        <div class="table-responsive">
                            <table class="table table-striped" id="usersTable">
                                <thead>
                                    <tr>
                                        <th>ID</th>
                                        <th>{{ _('Usuario') }}</th>
                                        <th>{{ _('Email') }}</th>
                                        <th>{{ _('Rol') }}</th>
                                        <th>{{ _('Fecha de registro') }}</th>
                                        <th>{{ _('Acciones') }}</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    {% for user in users %}
                                    <tr>
                                        <td>{{ user.id }}</td>
                                        <td>{{ user.username }}</td>
                                        <td>{{ user.email }}</td>
                                        <td>{{ user.role }}</td>
                                        <td>{{ user.created_at|date('d/m/Y') }}</td>
                                        <td>
                                            <button class="btn btn-sm btn-info edit-user" data-id="{{ user.id }}">
                                                <i class="fas fa-edit"></i>
                                            </button>
                                            <button class="btn btn-sm btn-danger delete-user" data-id="{{ user.id }}">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </td>
                                    </tr>
                                    {% endfor %}
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

                <!-- Modal para Editar/Crear Hongo -->
                <div class="modal fade" id="fungusModal" tabindex="-1" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="fungusModalTitle">{{ _('Editar Hongo') }}</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                <form id="fungusForm">
                                    <input type="hidden" id="fungi_id">
                                    <div class="mb-3">
                                        <label for="fungi_name" class="form-label">{{ _('Nombre') }}</label>
                                        <input type="text" class="form-control" id="fungi_name" required>
                                    </div>
                                    <div class="mb-3">
                                        <label for="fungi_common_name" class="form-label">{{ _('Nombre común') }}</label>
                                        <input type="text" class="form-control" id="fungi_common_name">
                                    </div>
                                    <div class="mb-3">
                                        <label for="fungi_edibility" class="form-label">{{ _('Comestibilidad') }}</label>
                                        <select class="form-control" id="fungi_edibility">
                                            <option value="buen-comestible">{{ _('Buen comestible') }}</option>
                                            <option value="comestible">{{ _('Comestible') }}</option>
                                            <option value="comestible-precaucion">{{ _('Comestible con precaución') }}</option>
                                            <option value="excelente-comestible">{{ _('Excelente comestible') }}</option>
                                            <option value="mortal">{{ _('Mortal') }}</option>
                                            <option value="no-comestible">{{ _('No comestible') }}</option>
                                            <option value="sin-valor">{{ _('Sin valor culinario') }}</option>
                                            <option value="toxica">{{ _('Tóxica') }}</option>
                                        </select>
                                    </div>
                                    <div class="mb-3">
                                        <label for="fungi_habitat" class="form-label">{{ _('Hábitat') }}</label>
                                        <input type="text" class="form-control" id="fungi_habitat">
                                    </div>
                                </form>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">{{ _('Cancelar') }}</button>
                                <button type="button" class="btn btn-primary" id="saveFungus">{{ _('Guardar') }}</button>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Modal para Editar Usuario -->
                <div class="modal fade" id="userModal" tabindex="-1" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="userModalTitle">{{ _('Editar Usuario') }}</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                <form id="userForm">
                                    <input type="hidden" id="user_id">
                                    <div class="mb-3">
                                        <label for="username" class="form-label">{{ _('Nombre de usuario') }}</label>
                                        <input type="text" class="form-control" id="username" required>
                                    </div>
                                    <div class="mb-3">
                                        <label for="email" class="form-label">{{ _('Email') }}</label>
                                        <input type="email" class="form-control" id="email" required>
                                    </div>
                                    <div class="mb-3">
                                        <label for="role" class="form-label">{{ _('Rol') }}</label>
                                        <select class="form-control" id="role">
                                            <option value="user">{{ _('Usuario') }}</option>
                                            <option value="admin">{{ _('Administrador') }}</option>
                                        </select>
                                    </div>
                                </form>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">{{ _('Cancelar') }}</button>
                                <button type="button" class="btn btn-primary" id="saveUser">{{ _('Guardar') }}</button>
                            </div>
                        </div>
                    </div>
                </div>
            </main>
        </div>
    </div>

    <!-- Bootstrap JS y dependencias -->
    <script src="/assets/lib/twbs/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Inicializar tooltips
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl)
            });

            // Funciones para gestión de hongos
            const btnAddFungi = document.getElementById('btnAddFungi');
            const fungusModal = new bootstrap.Modal(document.getElementById('fungusModal'));
            const userModal = new bootstrap.Modal(document.getElementById('userModal'));
            
            // Evento para abrir modal de nuevo hongo
            btnAddFungi.addEventListener('click', function() {
                document.getElementById('fungusModalTitle').textContent = '{{ _('Nuevo Hongo') }}';
                document.getElementById('fungusForm').reset();
                document.getElementById('fungi_id').value = '';
                fungusModal.show();
            });
            
            // Evento para botones de editar hongo
            document.querySelectorAll('.edit-fungi').forEach(btn => {
                btn.addEventListener('click', function() {
                    const id = this.dataset.id;
                    document.getElementById('fungusModalTitle').textContent = '{{ _('Editar Hongo') }}';
                    
                    // Obtener datos del hongo mediante API
                    fetch(`/api/fungi/${id}`)
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                const fungi = data.data;
                                document.getElementById('fungi_id').value = fungi.id;
                                document.getElementById('fungi_name').value = fungi.name;
                                document.getElementById('fungi_common_name').value = fungi.common_name || '';
                                document.getElementById('fungi_edibility').value = fungi.edibility || 'sin-valor';
                                document.getElementById('fungi_habitat').value = fungi.habitat || '';
                                fungusModal.show();
                            } else {
                                alert('{{ _('Error al cargar datos del hongo') }}');
                            }
                        });
                });
            });
            
            // Evento para botones de borrar hongo
            document.querySelectorAll('.delete-fungi').forEach(btn => {
                btn.addEventListener('click', function() {
                    if (confirm('{{ _('¿Estás seguro de que deseas eliminar este hongo?') }}')) {
                        const id = this.dataset.id;
                        
                        // Eliminar hongo mediante API
                        fetch(`/api/fungi/${id}`, {
                            method: 'DELETE',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                alert('{{ _('Hongo eliminado correctamente') }}');
                                location.reload();
                            } else {
                                alert(data.error || '{{ _('Error al eliminar el hongo') }}');
                            }
                        });
                    }
                });
            });
            
            // Guardar hongo (crear/editar)
            document.getElementById('saveFungus').addEventListener('click', function() {
                const fungiId = document.getElementById('fungi_id').value;
                const formData = {
                    name: document.getElementById('fungi_name').value,
                    common_name: document.getElementById('fungi_common_name').value,
                    edibility: document.getElementById('fungi_edibility').value,
                    habitat: document.getElementById('fungi_habitat').value
                };
                
                const method = fungiId ? 'PUT' : 'POST';
                const url = fungiId ? `/api/fungi/${fungiId}` : '/api/fungi';
                
                fetch(url, {
                    method: method,
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(formData)
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert(fungiId ? '{{ _('Hongo actualizado correctamente') }}' : '{{ _('Hongo creado correctamente') }}');
                        fungusModal.hide();
                        location.reload();
                    } else {
                        alert(data.error || '{{ _('Error al guardar el hongo') }}');
                    }
                });
            });
            
            // Eventos para usuarios
            document.querySelectorAll('.edit-user').forEach(btn => {
                btn.addEventListener('click', function() {
                    const id = this.dataset.id;
                    document.getElementById('userModalTitle').textContent = '{{ _('Editar Usuario') }}';
                    
                    // Obtener datos del usuario de la fila actual
                    const row = this.closest('tr');
                    document.getElementById('user_id').value = row.cells[0].textContent;
                    document.getElementById('username').value = row.cells[1].textContent;
                    document.getElementById('email').value = row.cells[2].textContent;
                    document.getElementById('role').value = row.cells[3].textContent;
                    userModal.show();
                });
            });
            
            // Guardar usuario
            document.getElementById('saveUser').addEventListener('click', function() {
                const userId = document.getElementById('user_id').value;
                const formData = {
                    username: document.getElementById('username').value,
                    email: document.getElementById('email').value,
                    role: document.getElementById('role').value
                };
                
                fetch(`/api/users/${userId}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(formData)
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert('{{ _('Usuario actualizado correctamente') }}');
                        userModal.hide();
                        location.reload();
                    } else {
                        alert(data.error || '{{ _('Error al actualizar el usuario') }}');
                    }
                });
            });
            
            // Eliminar usuario
            document.querySelectorAll('.delete-user').forEach(btn => {
                btn.addEventListener('click', function() {
                    if (confirm('{{ _('¿Estás seguro de que deseas eliminar este usuario?') }}')) {
                        const id = this.dataset.id;
                        
                        fetch(`/api/users/${id}`, {
                            method: 'DELETE',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                alert('{{ _('Usuario eliminado correctamente') }}');
                                location.reload();
                            } else {
                                alert(data.error || '{{ _('Error al eliminar el usuario') }}');
                            }
                        });
                    }
                });
            });
        });
    </script>
</body>
</html>