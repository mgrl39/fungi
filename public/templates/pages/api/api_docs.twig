<!DOCTYPE html>
<html lang="en" data-bs-theme="dark">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>API Docs</title>
    
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/assets/styles/generic.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    
    <style>
        .hero {
            background: linear-gradient(rgba(0,0,0,0.7), rgba(0,0,0,0.7)), 
                        url('/assets/images/api-bg.jpg') no-repeat center center;
            background-size: cover;
            padding: 5rem 0;
            margin-bottom: 2rem;
        }
        
        .endpoint-card {
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }
        
        .endpoint-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0,0,0,0.2);
        }
        
        .method-get { 
            background-color: #2563eb33;
            color: #60a5fa;
            border: 1px solid #2563eb4d;
        }
        
        .method-post {
            background-color: #16a34a33;
            color: #4ade80;
            border: 1px solid #16a34a4d;
        }
        
        .method-put {
            background-color: #d9770633;
            color: #fbbf24;
            border: 1px solid #d9770633;
        }
        
        .method-delete {
            background-color: #dc262633;
            color: #f87171;
            border: 1px solid #dc26264d;
        }
        
        .http-method {
            font-size: 0.75rem;
            padding: 0.125rem 0.5rem;
            border-radius: 0.25rem;
            font-weight: 600;
            text-transform: uppercase;
            display: inline-block;
            margin-right: 0.5rem;
        }
        
        .code-block {
            background-color: #1a1a1a;
            color: #f8f8f2;
            padding: 0.75rem;
            border-radius: 0.375rem;
            font-family: monospace;
            overflow-x: auto;
            white-space: pre;
            font-size: 0.9rem;
            line-height: 1.4;
            position: relative;
        }
        
        .copy-btn {
            position: absolute;
            top: 5px;
            right: 5px;
            z-index: 10;
            font-size: 0.75rem;
            padding: 0.15rem 0.35rem;
            opacity: 0.7;
            border-radius: 3px;
        }
        
        .copy-btn:hover {
            opacity: 1;
        }
        
        .param-tags {
            display: flex;
            flex-wrap: wrap;
            gap: 0.5rem;
            margin-top: 0.5rem;
        }
        
        .param-tag {
            background-color: #2a2a2a;
            border-radius: 4px;
            padding: 0.2rem 0.5rem;
            font-size: 0.8rem;
        }
        
        .card-body {
            padding: 1rem;
        }
        
        .card-footer {
            padding: 0.75rem;
            position: relative;
        }
    </style>
</head>
<body>
    {% set endpoints = [
        {
            'method': 'GET',
            'path': '/api/users',
            'requires_auth': true,
            'requires_admin': true,
            'parameters': [],
            'curl': 'curl -X GET "http://localhost:8080/api/users" \\\n  -H "Authorization: Bearer YOUR_TOKEN" \\\n  -H "Content-Type: application/json"'
        },
        {
            'method': 'GET',
            'path': '/api/users/:id',
            'requires_auth': true,
            'requires_admin': false,
            'parameters': [],
            'curl': 'curl -X GET "http://localhost:8080/api/users/1" \\\n  -H "Authorization: Bearer YOUR_TOKEN" \\\n  -H "Content-Type: application/json"'
        },
        {
            'method': 'POST',
            'path': '/api/users',
            'requires_auth': false,
            'requires_admin': false,
            'parameters': ['username', 'email', 'password'],
            'curl': 'curl -X POST "http://localhost:8080/api/users" \\\n  -H "Content-Type: application/json" \\\n  -d \'{"username": "value", "email": "value", "password": "value"}\''
        },
        {
            'method': 'PUT',
            'path': '/api/users/:id',
            'requires_auth': true,
            'requires_admin': true,
            'parameters': ['username', 'email', 'role', 'bio', 'name', 'location'],
            'curl': 'curl -X PUT "http://localhost:8080/api/users/1" \\\n  -H "Authorization: Bearer YOUR_TOKEN" \\\n  -H "Content-Type: application/json" \\\n  -d \'{"username": "value", "email": "value", "role": "admin"}\''
        },
        {
            'method': 'DELETE',
            'path': '/api/users/:id',
            'requires_auth': true,
            'requires_admin': true,
            'parameters': [],
            'curl': 'curl -X DELETE "http://localhost:8080/api/users/1" \\\n  -H "Authorization: Bearer YOUR_TOKEN" \\\n  -H "Content-Type: application/json"'
        },
        {
            'method': 'GET',
            'path': '/api/fungi',
            'requires_auth': false,
            'requires_admin': false,
            'parameters': [],
            'curl': 'curl -X GET "http://localhost:8080/api/fungi" \\\n  -H "Content-Type: application/json"'
        },
        {
            'method': 'GET',
            'path': '/api/fungi/:id',
            'requires_auth': false,
            'requires_admin': false,
            'parameters': [],
            'curl': 'curl -X GET "http://localhost:8080/api/fungi/1" \\\n  -H "Content-Type: application/json"'
        },
        {
            'method': 'GET',
            'path': '/api/fungi/page/:page/limit/:limit',
            'requires_auth': false,
            'requires_admin': false,
            'parameters': ['page', 'limit'],
            'curl': 'curl -X GET "http://localhost:8080/api/fungi/page/1/limit/8" \\\n  -H "Content-Type: application/json"'
        },
        {
            'method': 'GET',
            'path': '/api/fungi/search/name/:name',
            'requires_auth': false,
            'requires_admin': false,
            'parameters': ['name'],
            'curl': 'curl -X GET "http://localhost:8080/api/fungi/search/name/amanita" \\\n  -H "Content-Type: application/json"'
        },
        {
            'method': 'GET',
            'path': '/api/fungi/search/edibility/:edibility',
            'requires_auth': false,
            'requires_admin': false,
            'parameters': ['edibility'],
            'curl': 'curl -X GET "http://localhost:8080/api/fungi/search/edibility/excelente-comestible" \\\n  -H "Content-Type: application/json"'
        },
        {
            'method': 'POST',
            'path': '/api/auth/login',
            'requires_auth': false,
            'requires_admin': false,
            'parameters': ['username', 'password'],
            'curl': 'curl -X POST "http://localhost:8080/api/auth/login" \\\n  -H "Content-Type: application/json" \\\n  -d \'{"username": "value", "password": "value"}\''
        },
        {
            'method': 'POST',
            'path': '/api/auth/logout',
            'requires_auth': true,
            'requires_admin': false,
            'parameters': [],
            'curl': 'curl -X POST "http://localhost:8080/api/auth/logout" \\\n  -H "Authorization: Bearer YOUR_TOKEN" \\\n  -H "Content-Type: application/json"'
        }
    ] %}

    <header>
        {% include components.navbar %}
    </header>

    <main>
        <section class="hero text-center text-white">
            <div class="container">
                <h1 class="display-4 fw-bold mb-4">API Documentation</h1>
                <p class="lead mb-5">RESTful API</p>
                <div class="d-flex gap-3 justify-content-center">
                    <a href="#endpoints" class="btn btn-primary btn-lg">
                        <i class="fas fa-book-open me-2"></i> Endpoints
                    </a>
                </div>
            </div>
        </section>

        <div class="container py-4">
            <div class="row mb-5">
                <div class="col-md-8">
                    <h2>API v1.0</h2>
                </div>
                <div class="col-md-4">
                    <div class="input-group mb-3">
                        <span class="input-group-text"><i class="fas fa-key"></i></span>
                        <input type="text" id="api-token" class="form-control" placeholder="Tu token de API">
                        <button class="btn btn-outline-secondary" type="button" id="save-token">ðŸ’¾</button>
                    </div>
                </div>
            </div>
            
            <div id="endpoints" class="mb-5">
                <h2 class="mb-4"><i class="fas fa-plug me-2"></i> Endpoints</h2>
                
                <ul class="nav nav-pills mb-4" id="httpMethodsTabs" role="tablist">
                    <li class="nav-item" role="presentation">
                        <button class="nav-link active" id="all-tab" data-bs-toggle="pill" data-bs-target="#all" type="button" role="tab">
                            <i class="fas fa-globe me-1"></i> ALL
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="get-tab" data-bs-toggle="pill" data-bs-target="#get" type="button" role="tab">
                            <i class="fas fa-download me-1"></i> GET
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="post-tab" data-bs-toggle="pill" data-bs-target="#post" type="button" role="tab">
                            <i class="fas fa-plus me-1"></i> POST
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="put-tab" data-bs-toggle="pill" data-bs-target="#put" type="button" role="tab">
                            <i class="fas fa-pen me-1"></i> PUT
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="delete-tab" data-bs-toggle="pill" data-bs-target="#delete" type="button" role="tab">
                            <i class="fas fa-trash me-1"></i> DELETE
                        </button>
                    </li>
                </ul>
                
                <div class="tab-content" id="httpMethodsContent">
                    <div class="tab-pane fade show active" id="all" role="tabpanel" aria-labelledby="all-tab">
                        <div class="row">
                            {% for endpoint in endpoints %}
                            <div class="col-md-6 mb-4">
                                <div class="card endpoint-card h-100">
                                    <div class="card-header d-flex justify-content-between align-items-center py-2">
                                        <div>
                                            <span class="http-method method-{{ endpoint.method|lower }}">{{ endpoint.method }}</span>
                                            <span class="fw-bold">{{ endpoint.path }}</span>
                                        </div>
                                        <div>
                                            {% if endpoint.requires_auth %}
                                            <span class="badge bg-info"><i class="fas fa-lock me-1"></i> Auth</span>
                                            {% endif %}
                                            {% if endpoint.requires_admin %}
                                            <span class="badge bg-warning text-dark"><i class="fas fa-user-shield me-1"></i> Admin</span>
                                            {% endif %}
                                        </div>
                                    </div>
                                    <div class="card-body">
                                        {% if endpoint.parameters|length > 0 %}
                                        <div class="param-tags">
                                            {% for param in endpoint.parameters %}
                                            <span class="param-tag"><code>{{ param }}</code></span>
                                            {% endfor %}
                                        </div>
                                        {% endif %}
                                    </div>
                                    <div class="card-footer bg-dark">
                                        <button class="btn btn-sm btn-outline-light w-100" type="button" data-bs-toggle="collapse" data-bs-target="#code-{{ endpoint.method|lower }}-{{ loop.index }}">
                                            <i class="fas fa-code me-1"></i> cURL
                                        </button>
                                        <div class="collapse mt-2" id="code-{{ endpoint.method|lower }}-{{ loop.index }}">
                                            <div class="code-block">{{ endpoint.curl|raw }}</div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            {% endfor %}
                        </div>
                    </div>
                    
                    {% for method in ['get', 'post', 'put', 'delete'] %}
                    <div class="tab-pane fade" id="{{ method }}" role="tabpanel" aria-labelledby="{{ method }}-tab">
                        <div class="row">
                            {% for endpoint in endpoints %}
                            {% if endpoint.method|lower == method %}
                            <div class="col-md-6 mb-4">
                                <div class="card endpoint-card h-100">
                                    <div class="card-header d-flex justify-content-between align-items-center py-2">
                                        <div>
                                            <span class="http-method method-{{ endpoint.method|lower }}">{{ endpoint.method }}</span>
                                            <span class="fw-bold">{{ endpoint.path }}</span>
                                        </div>
                                        <div>
                                            {% if endpoint.requires_auth %}
                                            <span class="badge bg-info"><i class="fas fa-lock me-1"></i> Auth</span>
                                            {% endif %}
                                            {% if endpoint.requires_admin %}
                                            <span class="badge bg-warning text-dark"><i class="fas fa-user-shield me-1"></i> Admin</span>
                                            {% endif %}
                                        </div>
                                    </div>
                                    <div class="card-body">
                                        {% if endpoint.parameters|length > 0 %}
                                        <div class="param-tags">
                                            {% for param in endpoint.parameters %}
                                            <span class="param-tag"><code>{{ param }}</code></span>
                                            {% endfor %}
                                        </div>
                                        {% endif %}
                                    </div>
                                    <div class="card-footer bg-dark">
                                        <button class="btn btn-sm btn-outline-light w-100" type="button" data-bs-toggle="collapse" data-bs-target="#code-{{ endpoint.method|lower }}-{{ method }}-{{ loop.index }}">
                                            <i class="fas fa-code me-1"></i> cURL
                                        </button>
                                        <div class="collapse mt-2" id="code-{{ endpoint.method|lower }}-{{ method }}-{{ loop.index }}">
                                            <div class="code-block">{{ endpoint.curl|raw }}</div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            {% endif %}
                            {% endfor %}
                        </div>
                    </div>
                    {% endfor %}
                </div>
            </div>
        </div>
    </main>

    <footer class="mt-auto">
        {% include components.footer %}
    </footer>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Agregar botones de copia a todos los bloques de cÃ³digo
            document.querySelectorAll('.code-block').forEach(block => {
                if (!block.querySelector('.copy-btn')) {
                    const copyBtn = document.createElement('button');
                    copyBtn.className = 'btn btn-sm btn-outline-light copy-btn';
                    copyBtn.innerHTML = '<i class="fas fa-copy"></i>';
                    copyBtn.addEventListener('click', function() {
                        copyToClipboard(this);
                    });
                    block.appendChild(copyBtn);
                }
            });
            
            // Guardar token en localStorage
            const saveTokenBtn = document.getElementById('save-token');
            if (saveTokenBtn) {
                saveTokenBtn.addEventListener('click', function() {
                    const tokenValue = document.getElementById('api-token').value.trim();
                    if (tokenValue) {
                        localStorage.setItem('api_token', tokenValue);
                        alert('Token guardado correctamente');
                        
                        // Actualizar visualizaciÃ³n de comandos curl con el nuevo token
                        updateCurlCommandsWithToken(tokenValue);
                    }
                });
            }
            
            // Cargar token desde localStorage si existe y aplicarlo directamente
            const savedToken = localStorage.getItem('api_token');
            const tokenInput = document.getElementById('api-token');
            if (savedToken && tokenInput) {
                tokenInput.value = savedToken;
                // Actualizar visualizaciÃ³n al cargar la pÃ¡gina
                updateCurlCommandsWithToken(savedToken);
            }
            
            // TambiÃ©n actualizar cuando el input cambia
            if (tokenInput) {
                tokenInput.addEventListener('input', function() {
                    const currentToken = this.value.trim();
                    if (currentToken) {
                        updateCurlCommandsWithToken(currentToken);
                    }
                });
            }
        });
        
        // FunciÃ³n para actualizar todos los comandos curl con el token actual
        function updateCurlCommandsWithToken(token) {
            if (!token) return;
            console.log("Actualizando comandos con token:", token);
            
            document.querySelectorAll('.code-block').forEach(block => {
                // Obtener el contenido de texto del bloque
                const originalText = block.textContent;
                
                // Solo realizar reemplazo si contiene la cadena TARGET
                if (originalText.includes('Bearer YOUR_TOKEN')) {
                    // Crear un nuevo textNode con el contenido reemplazado
                    const updatedText = originalText.replace(/Bearer YOUR_TOKEN/g, `Bearer ${token}`);
                    
                    // Limpiar el contenido actual y agregar el texto actualizado
                    while (block.firstChild) {
                        if (!block.firstChild.classList || !block.firstChild.classList.contains('copy-btn')) {
                            block.removeChild(block.firstChild);
                        } else {
                            // Mantener el botÃ³n de copia
                            const copyBtn = block.firstChild;
                            block.removeChild(copyBtn);
                            block.textContent = updatedText;
                            block.appendChild(copyBtn);
                            return;
                        }
                    }
                    
                    block.textContent = updatedText;
                    
                    // Efectos visuales para indicar que se actualizÃ³
                    block.style.transition = "background-color 0.3s";
                    block.style.backgroundColor = "#2c4d2c";
                    setTimeout(() => {
                        block.style.backgroundColor = "#1a1a1a";
                    }, 500);
                }
            });
        }
        
        function copyToClipboard(button) {
            const codeBlock = button.closest('.code-block');
            const code = codeBlock.textContent.trim();
            
            // Usar el API de Clipboard
            navigator.clipboard.writeText(code).then(() => {
                // Feedback visual
                const originalIcon = button.innerHTML;
                button.innerHTML = '<i class="fas fa-check"></i>';
                
                setTimeout(() => {
                    button.innerHTML = originalIcon;
                }, 2000);
            }).catch(err => {
                console.error('Error al copiar: ', err);
                alert('No se pudo copiar al portapapeles');
            });
        }
    </script>
</body>
</html>

