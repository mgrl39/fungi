<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{ title }}</title>
    <link rel="stylesheet" href="/assets/lib/twbs/bootstrap/dist/css/bootstrap.min.css">
      <!-- Animate.css para animaciones -->
    <link rel="stylesheet" href="/assets/lib/animate.css/animate.min.css">
    <!-- AOS - Animate On Scroll -->
    <link rel="stylesheet" href="/assets/lib/aos/aos.css">
    
    <style>
        .shake-animation {
            animation: shake 0.5s;
        }
        @keyframes shake {
            0%, 100% { transform: translateX(0); }
            25% { transform: translateX(-10px); }
            75% { transform: translateX(10px); }
        }
        
        body {
            background-color: #131828;
            background-image: linear-gradient(to bottom right, #131828, #1a2035);
            height: 100vh;
            color: #f8f9fa;
        }
        
        .card {
            background-color: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.1);
        }
        
        .card-body, .card-footer {
            background-color: rgba(255, 255, 255, 0.05);
        }
        
        .form-control {
            background-color: rgba(255, 255, 255, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.1);
            color: white;
        }
        
        .form-control:focus {
            background-color: rgba(255, 255, 255, 0.15);
            color: white;
        }
        
        .form-control::placeholder {
            color: rgba(255, 255, 255, 0.5);
        }
        
        .card-footer {
            border-top: 1px solid rgba(255, 255, 255, 0.1);
        }

        .modal-content {
            background-color: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.1);
            color: white;
        }

        .modal-header, .modal-footer {
            border-color: rgba(255, 255, 255, 0.1);
        }
    </style>
</head>
<body>
    <div class="container d-flex justify-content-center align-items-center min-vh-100">
        <div class="card shadow-lg col-md-6 col-lg-5 col-xl-4 border-0 animate__animated animate__fadeIn" data-aos="zoom-in">
            <div class="card-header bg-primary text-white text-center py-3">
                <h2 class="mb-0 animate__animated animate__pulse animate__infinite animate__slower"><i class="fas fa-sign-in-alt me-2"></i> {{ _('Iniciar sesión') }}</h2>
            </div>
            <div class="card-body p-4">
                {% if error %}
                <div class="alert alert-danger animate__animated animate__headShake">
                    <i class="fas fa-exclamation-circle me-2"></i> {{ error }}
                </div>
                {% endif %}

                {% if success %}
                <div class="alert alert-success animate__animated animate__bounceIn">
                    <i class="fas fa-check-circle me-2"></i> {{ success }}
                </div>
                {% endif %}

                <form id="loginForm" onsubmit="return handleLogin(event)" data-aos="fade-up" data-aos-delay="200">
                    <div class="mb-4">
                        <label for="username" class="form-label"><i class="fas fa-user me-2"></i> {{ _('Usuario') }}</label>
                        <input type="text" class="form-control form-control-lg" id="username" name="username" required placeholder="{{ _('Introduce tu nombre de usuario') }}">
                    </div>

                    <div class="mb-4">
                        <label for="password" class="form-label"><i class="fas fa-lock me-2"></i> {{ _('Contraseña') }}</label>
                        <input type="password" class="form-control form-control-lg" id="password" name="password" required placeholder="{{ _('Introduce tu contraseña') }}">
                    </div>

                    <div class="mb-3">
                        <a href="#" class="text-info text-decoration-none" data-bs-toggle="modal" data-bs-target="#contactAdminModal">
                            <i class="fas fa-question-circle me-1"></i> {{ _('¿Olvidaste tu contraseña?') }}
                        </a>
                    </div>

                    <div id="loginError" class="alert alert-danger d-none animate__animated animate__headShake">
                        <i class="fas fa-exclamation-circle me-2"></i> <span id="errorMessage"></span>
                    </div>

                    <button type="submit" class="btn btn-primary w-100 py-2 animate__animated animate__pulse animate__infinite animate__slow">
                        <i class="fas fa-sign-in-alt me-2"></i> {{ _('Iniciar sesión') }}
                    </button>
                </form>
            </div>
            <div class="card-footer text-center py-3">
                <p class="mb-0 text-white"><i class="fas fa-user-plus me-2"></i> {{ _('¿No tienes una cuenta?') }} <a href="/register" class="text-decoration-none text-info">{{ _('Regístrate') }}</a></p>
            </div>
        </div>
    </div>

    <!-- Modal de Contacto con Administrador -->
    <div class="modal fade" id="contactAdminModal" tabindex="-1" aria-labelledby="contactAdminModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="contactAdminModalLabel"><i class="fas fa-envelope me-2"></i>{{ _('Contactar al Administrador') }}</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>{{ _('Si has olvidado tu contraseña, por favor contacta con el administrador del sistema para restablecerla.') }}</p>
                    <p class="mb-0"><i class="fas fa-envelope me-2"></i>Email: admin@example.com</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">{{ _('Cerrar') }}</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://unpkg.com/aos@2.3.1/dist/aos.js"></script>
    <script src="/assets/lib/twbs/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Inicializar AOS
        AOS.init({
            duration: 500,
            easing: 'ease-in-out'
        });
        
        function validateForm() {
            const username = document.getElementById('username').value.trim();
            const password = document.getElementById('password').value;
            const usernameInput = document.getElementById('username');
            const passwordInput = document.getElementById('password');

            if (username === '') {
                usernameInput.classList.add('shake-animation', 'is-invalid');
                setTimeout(() => {
                    usernameInput.classList.remove('shake-animation');
                }, 500);
                return false;
            }

            if (password === '') {
                passwordInput.classList.add('shake-animation', 'is-invalid');
                setTimeout(() => {
                    passwordInput.classList.remove('shake-animation');
                }, 500);
                return false;
            }

            return true;
        }

        // Eliminar la clase de animación cuando el usuario empiece a escribir
        document.getElementById('username').addEventListener('input', function() {
            this.classList.remove('shake-animation', 'is-invalid');
        });

        document.getElementById('password').addEventListener('input', function() {
            this.classList.remove('shake-animation', 'is-invalid');
        });
        
        // Nueva función para manejar el login con JWT
        function handleLogin(event) {
            event.preventDefault();
            
            if (!validateForm()) {
                return false;
            }
            
            const username = document.getElementById('username').value.trim();
            const password = document.getElementById('password').value;
            const errorDiv = document.getElementById('loginError');
            const errorMessage = document.getElementById('errorMessage');
            
            // Ocultar mensaje de error previo
            errorDiv.classList.add('d-none');
            
            // Realizar petición a la API
            fetch('/api/auth/login', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    username: username,
                    password: password
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Guardar el token JWT en localStorage
                    localStorage.setItem('jwt_token', data.token);
                    
                    // Guardar datos básicos del usuario
                    localStorage.setItem('user_data', JSON.stringify(data.user));
                    
                    // Redirigir al usuario a la página principal
                    window.location.href = '/';
                } else {
                    // Mostrar mensaje de error
                    errorMessage.textContent = data.error || '{{ _('Credenciales inválidas') }}';
                    errorDiv.classList.remove('d-none');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                errorMessage.textContent = '{{ _('Error de conexión. Inténtalo de nuevo más tarde.') }}';
                errorDiv.classList.remove('d-none');
            });
            
            return false;
        }
    </script>
</body>
</html>
